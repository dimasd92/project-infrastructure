---
AWSTemplateFormatVersion: '2010-09-09'
Resources:

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: Project
      VpcId:
        Fn::ImportValue: VPC
      Port: 80
      Protocol: HTTP
      HealthCheckIntervalSeconds: 120
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 60
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      Subnets:
      - Fn::ImportValue: SubnetPrivateA
      - Fn::ImportValue: SubnetPrivateB
      SecurityGroups:
        - Fn::ImportValue: PublicSubnetSecurityGroup
      LoadBalancerAttributes:
      - Key: idle_timeout.timeout_seconds
        Value: '30'

  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Port: 443
      Protocol: HTTPS
      Certificates:
        - CertificateArn: arn:aws:acm:us-west-1:069312102029:certificate/4e9dbaff-586b-451f-8888-30f6b6ab15c3
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup

  ECSALBListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
      - Type: forward
        TargetGroupArn: !Ref 'TargetGroup'
      Conditions:
      - Field: path-pattern
        Values: [/]
      ListenerArn: !Ref 'LoadBalancerListener'
      Priority: 1

Outputs:
  TargetGroup:
    Value: !Ref TargetGroup
    Export:
      Name: TargetGroup
  LoadBalancerFullName:
    Value: !GetAtt LoadBalancer.LoadBalancerFullName
    Export:
      Name: LoadBalancerFullName
  URL:
    Description: URL of the website
    Value: !Join ['', ['https://', !GetAtt [LoadBalancer, DNSName]]]
