node {
   def mvnHome
   stage('Preparation') {
      git 'https://github.com/dimasd92/spring-petclinic'
      mvnHome = tool 'Maven'
   }
   stage('Test petclinic') {
         sh "'${mvnHome}/bin/mvn' test"
   }
   stage('Build petclinic app') {
         sh "'${mvnHome}/bin/mvn' -Dmaven.test.skip=true package"
   }
   stage('Build docker image') {
         sh label: '', script: 'wget -O tomcat/tomcat-users.xml https://s3-us-west-2.amazonaws.com/project.public/tomcat-users.xml'
         sh label: '', script: 'docker build -t petclinic .'
   }
   stage('Deploy Docker image to ECR') {
         sh label: '', script: '$(aws ecr get-login --no-include-email --region us-west-2)'
         sh label: '', script: 'docker tag petclinic:latest 069312102029.dkr.ecr.us-west-2.amazonaws.com/petclinic:latest'
         sh label: '', script: 'docker push 069312102029.dkr.ecr.us-west-2.amazonaws.com/petclinic:latest'
   }
}

def notifySlack(String buildStatus = 'STARTED') {
    // Build status of null means success.
    buildStatus = buildStatus ?: 'SUCCESS'

    def color

    if (buildStatus == 'STARTED') {
        color = '#D4DADF'
    } else if (buildStatus == 'SUCCESS') {
        color = '#BDFFC3'
    } else if (buildStatus == 'UNSTABLE') {
        color = '#FFFE89'
    } else {
        color = '#FF9FA1'
    }

    def msg = "${buildStatus}: `${env.JOB_NAME}` #${env.BUILD_NUMBER}:\n${env.BUILD_URL}"

    slackSend(color: color, message: msg)
}

node {
    try {
        notifySlack()

        // Existing build steps.
    } catch (e) {
        currentBuild.result = 'FAILURE'
        throw e
    } finally {
        notifySlack(currentBuild.result)
    }
}


// slackSend baseUrl: 'https://petclinicproject.slack.com/', channel: '#builds', color: '#439FE0', message: '', tokenCredentialId: '4667cb0b-4bae-494e-a110-1642908f960d'
